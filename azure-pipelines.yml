# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

parameters:
- name: succeed
  displayName: Succeed or fail
  type: boolean
  default: false

trigger:
# - master
- '*'

stages:
- stage: Build
  jobs:
  - job: Build

    pool:
      vmImage: 'windows-latest'

    variables:
      solution: '**/*.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'

    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

  # This job creates a work item, and only runs if the previous job failed
  - job: ErrorHandler
    dependsOn: Build
    condition: failed()
    steps: 
    - bash: |
        az boards work-item create \
          --title "Build $(build.buildNumber) failed" \
          --type bug \
          --org $(System.TeamFoundationCollectionUri) \
          --project $(System.TeamProject)
      env: 
        AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
      displayName: 'Create work item on failure'

- stage: Deploy
  jobs:
  - job: Deploy

    pool:
      vmImage: 'windows-latest'
  
    steps:
    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: 'current'
        downloadType: 'single'
        downloadPath: '$(System.ArtifactsDirectory)'
        artifactName: 'drop'

    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'SC-CommunicateBachelor&Trainee-gr11'
        appType: 'webApp'
        WebAppName: 'EcoEstimate'
        packageForLinux: '$(System.ArtifactsDirectory)/drop/*.zip'